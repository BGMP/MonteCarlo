////////////////////////////////////////////////////////////////////////////////
//
// MonteCarlo (Generic)
//
// Desc: math_MonteCarloSequential.cpp
// Sequential implementation of the Monte Carlo method.
//
// 14/10/2024 (BGM)
// File inception.
//
////////////////////////////////////////////////////////////////////////////////

#include "../include/math_MonteCarloSequential.h"

////////////////////////////////////////////////////////////////////////////////
// Macros:
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Types:
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Prototypes:
////////////////////////////////////////////////////////////////////////////////

double runSequentialMonteCarloPICalculation(long n);

////////////////////////////////////////////////////////////////////////////////
// Globals:
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Procedures:
////////////////////////////////////////////////////////////////////////////////

double runSequentialMonteCarloPICalculation(long n) {
  int count = 0;
  std::default_random_engine generator;
  std::uniform_real_distribution<double> distribution(0.0, 1.0);

  for (long i = 0; i < n; ++i) {
    double x = distribution(generator);
    double y = distribution(generator);

    if (x * x + y * y <= 1.0) {
      count++;
    }
  }

  return CIRCLE_MULTIPLIER * count / n;
}
